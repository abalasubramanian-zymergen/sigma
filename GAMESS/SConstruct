import os
import shutil

# www.scons.org script files for COSMO computations using both MOPAC and GAMESS

# Use "nohup" to run from ssh and keep running after logout

env = Environment()

# env['ENV']['USER'] = os.environ['USER']
env['ENV']['HOME'] = os.environ['HOME']

# GAMESS keys file stuff
keys = 'keys.gamess'
keys_0 = 'keys_0.gamess'
keys_p1 = 'keys_p1.gamess'
keys_m1 = 'keys_m1.gamess'
# creating the charge files
file = open(keys,'r')
fileContents = file.read()
file.close()

file = open(keys_0,'w')
file.write(fileContents)
file.write('\n! Internal Coordinates\n $CONTRL nzvar=1 $END\n $zmat dlc=.t. auto=.t. $END')
file.close()

file = open(keys_p1,'w')
file.write(fileContents + '\n $CONTRL ICHARG=+1 $END')
file.close()

file = open(keys_m1,'w')
file.write(fileContents + '\n $CONTRL ICHARG=-1 $END')
file.close()

# Gamess stuff
babelgam = Builder(action = 'babel -i mol $SOURCE -o gamin -xf ' + keys_0 + ' $TARGET',
                     suffix = '.inp', single_source=True)
babelgam_p1 = Builder(action = 'babel -i mol $SOURCE -o gamin -xf ' + keys_p1 + ' $TARGET',
                     suffix = '.inp', single_source=True)
babelgam_m1 = Builder(action = 'babel -i mol $SOURCE -o gamin -xf ' + keys_m1 + ' $TARGET',
                     suffix = '.inp', single_source=True)

# Gamess also produces a .dat file
def gamess_targets(target, source, env):
           target.append('/usr/local/bin/gamess/$TARGET.dat')
           return target, source
gamess = Builder(action = '/usr/local/bin/gamess/rungms $SOURCE > $TARGET', suffix = '.gout',
	single_source=True) # , emitter = gamess_targets)
env.Append(BUILDERS = {'BabelGam' : babelgam})
env.Append(BUILDERS = {'BabelGam_m1' : babelgam_m1})
env.Append(BUILDERS = {'BabelGam_p1' : babelgam_p1})
env.Append(BUILDERS = {'Gamess' : gamess})

# files
molfiles = Glob('*.mol')
files = []
files_p1 = []
files_m1 = []
for fi in molfiles :
	# if str(fi).endswith("+1.mol") :
	# 	files_p1.append(fi)
	# elif str(fi).endswith("-1.mol") :
	# 	files_m1.append(fi)
	# else :
	files.append(fi)

# Build all files for Gamess
# Delete all DAT files, otherwise gamess will stop
# delAction = Delete(Glob(os.environ['HOME'] + '/src/gamess/tmp/*.dat'))
delAction = Delete(Glob('/usr/local/bin/gamess/scr/*.dat'))
Execute(delAction)

# Convert mol files to gamess input
inps = env.BabelGam(files)
inps += env.BabelGam_p1(files_p1)
inps += env.BabelGam_m1(files_m1)
env.Depends(inps, ['keys.gamess'])
# env.Depends(inps, delAction)
# process files with gamess
gamessBuild = env.Gamess(inps)
env.Alias('gamess', gamessBuild)

basedir = os.path.basename(os.path.abspath('.'))

env.Default(gamessBuild)
